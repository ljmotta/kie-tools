#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Packaging
# quarkus.package.type=fast-jar

quarkus.swagger-ui.always-include=true

kafka.bootstrap.servers=localhost:9092

mp.messaging.incoming.travelers.connector=smallrye-kafka
mp.messaging.incoming.travelers.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.travelers.auto.offset.reset=earliest

mp.messaging.outgoing.collaboration.connector=smallrye-kafka
mp.messaging.outgoing.collaboration.value.serializer=org.apache.kafka.common.serialization.StringSerializer
# mp.messaging.incoming.collaboration.connector=smallrye-kafka
# mp.messaging.incoming.collaboration.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
# mp.messaging.incoming.collaboration.auto.offset.reset=earliest

mp.messaging.incoming.pong.connector=smallrye-kafka
mp.messaging.incoming.pong.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.pong.auto.offset.reset=earliest

mp.messaging.outgoing.processedtravelers.connector=smallrye-kafka
mp.messaging.outgoing.processedtravelers.topic=processedtravelers
mp.messaging.outgoing.processedtravelers.value.serializer=org.apache.kafka.common.serialization.StringSerializer


kogito.events.processinstances.enabled=true
kogito.events.usertasks.enabled=true
kogito.events.variables.enabled=true
kogito.events.processdefinitions.enabled=true

mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kogito-processinstances-events.auto.offset.reset=earliest

mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kogito-usertaskinstances-events.auto.offset.reset=earliest

mp.messaging.outgoing.kogito-variables-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-variables-events.topic=kogito-variables-events
mp.messaging.outgoing.kogito-variables-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kogito-variables-events.auto.offset.reset=earliest

mp.messaging.outgoing.kogito-processdefinitions-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processdefinitions-events.topic=kogito-processdefinitions-events
mp.messaging.outgoing.kogito-processdefinitions-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kogito-processdefinitions-events.auto.offset.reset=earliest